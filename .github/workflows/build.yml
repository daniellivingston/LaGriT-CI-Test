name: CI

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      LAGRIT_VERSION: 0.0.1
    
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows (MinGW)", artifact: "LaGriT-${{ env.LAGRIT_VERSION }}-win64.zip",
            os: windows-latest,
            cc: "gcc", cxx: "g++", fc: "gfortran", python: "3.6"
          }
        - {
            name: "Ubuntu (GCC)", artifact: "LaGriT-${{ env.LAGRIT_VERSION }}-linux64.zip",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++", fc: "gfortran", python: "3.6"
          }
        - {
            name: "macOS (Clang)", artifact: "LaGriT-${{ env.LAGRIT_VERSION }}-mac64.zip",
            os: macos-latest,
            cc: "clang", cxx: "clang++", fc: "gfortran", python: "3.6"
          }

    steps:
     - uses: actions/checkout@v1
     - name: Build LaGriT
       run: |
         make exodus
         make release

     - name: Test LaGriT
       run: make test

     - name: Prepare for upload
       run: |
         mkdir LaGriT-${{ env.LAGRIT_VERSION }}/
         cp src/lagrit LaGriT-${{ env.LAGRIT_VERSION }}/LaGriT-${{ env.LAGRIT_VERSION }}.exe
         cp LICENSE.md LaGriT-${{ env.LAGRIT_VERSION }}/LICENSE
         cp README.md LaGriT-${{ env.LAGRIT_VERSION }}/README.md
         zip -r ${{ matrix.artifact }} LaGriT-${{ env.LAGRIT_VERSION }}/

     - uses: actions/upload-artifact@v2
       with:
         name: ${{ matrix.artifact }}
         path: ${{ matrix.artifact }}
